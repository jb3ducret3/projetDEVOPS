---
- name: Installation de Kubernetes
  hosts: jenkins;kms;kws
  become: true
  tasks:
    - name: Mise à jour et installation des prérequis
      shell: |
        sudo apt update
        sudo apt install -y curl
        curl -LO https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
        kubectl version --client

- name: Configuration du master Kubernetes
  hosts: kms
  tasks:
    - name: Configurer le nom du master k8s
      shell: |
        sudo hostnamectl set-hostname K8s-Master
        sudo apt-get update 
        sudo apt-get install -y docker.io
        sudo usermod -aG docker Ubuntu
        newgrp docker
        sudo chmod 777 /var/run/docker.sock
        sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        sudo tee /etc/apt/sources.list.d/kubernetes.list <<EOF
        deb https://apt.kubernetes.io/ kubernetes-xenial main
        EOF
        sudo apt-get update
        sudo apt-get install -y kubelet kubeadm kubectl
        sudo snap install kube-apiserver

- name: Configuration du worker Kubernetes
  hosts: kws
  tasks:
    - name: Configurer le nom du worker k8s
      shell: |
        sudo hostnamectl set-hostname K8s-Worker
        sudo su
        swapoff -a; sed -i '/swap/d' /etc/fstab
        cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
        overlay
        br_netfilter
        EOF
        sudo modprobe overlay
        sudo modprobe br_netfilter
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables = 1
        net.bridge.bridge-nf-call-ip6tables = 1
        net.ipv4.ip_forward = 1
        EOF
        sudo sysctl -p /etc/sysctl.d/k8s.conf
        apt update
        sudo apt-get install -y apt-transport-https ca-certificates curl
        curl -fsSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg
        echo "deb [signed-by=/etc/apt/trusted.gpg.d/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
        apt update
        apt-get install -y kubelet kubeadm kubectl kubernetes-cni
        apt install docker.io -y
        sudo mkdir /etc/containerd
        sudo sh -c "containerd config default > /etc/containerd/config.toml"
        sudo sed -i 's/ SystemdCgroup = false/ SystemdCgroup = true/' /etc/containerd/config.toml
        systemctl restart containerd.service
        systemctl restart kubelet.service
        systemctl enable kubelet.service

- name: Initialisation du cluster Kubernetes
  hosts: kms
  tasks:
    - name: Initialiser le cluster Kubernetes
      shell: |
        kubeadm config images pull
        kubeadm init
        mkdir -p $HOME/.kube
        sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        sudo chown $(id -u):$(id -g) $HOME/.kube/config

- name: Rejoindre le worker au cluster Kubernetes
  hosts: kws
  tasks:
    - name: Rejoindre le worker au cluster Kubernetes
      shell: |
        kubeadm join 172.31.59.154:6443 --token deq9nl.y34go2ziii0fu8c1 \
        --discovery-token-ca-cert-hash sha256:e93c56bd59b175b81845a671a82ffd1839e42272d922f9c43ca8d8f6d145ce02

- name: Installation de Calico
  hosts: kms
  tasks:
    - name: Appliquer la configuration de Calico
      shell: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml
